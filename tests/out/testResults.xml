<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="36" errors="0" failures="1" not-run="0" inconclusive="0" ignored="0" skipped="2" invalid="0" date="2022-01-22" time="08:45:30">
  <environment machine-name="JLA-LOFTHTPC" cwd="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests" clr-version="Unknown" nunit-version="2.5.8.0" user-domain="JLA-LoftHTPC" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" os-version="10.0.19042" user="Owner" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="1.1115" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Manifest.tests.ps1" executed="True" result="Ignored" success="True" time="0.3024" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Manifest.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module manifest" executed="True" result="Success" success="True" time="0.1059" asserts="0" description="Module manifest">
            <results>
              <test-suite type="TestFixture" name="Module manifest.Validation" executed="True" result="Success" success="True" time="0.1016" asserts="0" description="Module manifest.Validation">
                <results>
                  <test-case description="Has a valid manifest" name="Module manifest.Validation.Has a valid manifest" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid name in the manifest" name="Module manifest.Validation.Has a valid name in the manifest" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid root module" name="Module manifest.Validation.Has a valid root module" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid version in the manifest" name="Module manifest.Validation.Has a valid version in the manifest" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid description" name="Module manifest.Validation.Has a valid description" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid author" name="Module manifest.Validation.Has a valid author" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid guid" name="Module manifest.Validation.Has a valid guid" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid copyright" name="Module manifest.Validation.Has a valid copyright" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid version in the changelog" name="Module manifest.Validation.Has a valid version in the changelog" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Changelog and manifest versions are the same" name="Module manifest.Validation.Changelog and manifest versions are the same" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Git tagging" executed="True" result="Ignored" success="True" time="0.1187" asserts="0" description="Git tagging">
            <results>
              <test-case description="Is tagged with a valid version" name="Git tagging.Is tagged with a valid version" time="0.0047" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="Matches manifest version" name="Git tagging.Matches manifest version" time="0.0042" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Meta.tests.ps1" executed="True" result="Failure" success="False" time="0.238" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Meta.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Text files formatting" executed="True" result="Failure" success="False" time="0.1005" asserts="0" description="Text files formatting">
            <results>
              <test-suite type="TestFixture" name="Text files formatting.File encoding" executed="True" result="Success" success="True" time="0.0118" asserts="0" description="Text files formatting.File encoding">
                <results>
                  <test-case description="No text file uses Unicode/UTF-16 encoding" name="Text files formatting.File encoding.No text file uses Unicode/UTF-16 encoding" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Text files formatting.Indentations" executed="True" result="Failure" success="False" time="0.0976" asserts="0" description="Text files formatting.Indentations">
                <results>
                  <test-case description="No text file use tabs for indentations" name="Text files formatting.Indentations.No text file use tabs for indentations" time="0.0814" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 2.</message>
                      <stack-trace>at $totalTabsCount | Should -Be 0, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Meta.tests.ps1:47
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Meta.tests.ps1:47</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\PsDfs.tests.ps1" executed="True" result="Success" success="True" time="0.4142" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\PsDfs.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="'PsDfs.psd1' Module Manifest Tests" executed="True" result="Success" success="True" time="0.1181" asserts="0" description="'PsDfs.psd1' Module Manifest Tests">
            <results>
              <test-suite type="ParameterizedTest" name="'PsDfs.psd1' Module Manifest Tests.Module manifest 'PsDfs.psd1' passes Test-ModuleManifest" executed="True" result="Success" success="True" time="0.1152" asserts="0" description="Module manifest 'PsDfs.psd1' passes Test-ModuleManifest">
                <results>
                  <test-case description="Module manifest 'PsDfs.psd1' passes Test-ModuleManifest" name="'PsDfs.psd1' Module Manifest Tests.Module manifest 'PsDfs.psd1' passes Test-ModuleManifest(E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\PsDfs\1.0.0\PsDfs.psd1)" time="0.1152" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="'PsDfs' Function Tests" executed="True" result="Success" success="True" time="0.2841" asserts="0" description="'PsDfs' Function Tests">
            <results>
              <test-suite type="ParameterizedTest" name="'PsDfs' Function Tests.Script '&lt;Script&gt;' is valid PowerShell" executed="True" result="Success" success="True" time="0.1619" asserts="0" description="Script '&lt;Script&gt;' is valid PowerShell">
                <results>
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\PsDfs\1.0.0\PsDfs.psd1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\PsDfs\1.0.0\PsDfs.psd1' is valid PowerShell" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\PsDfs\1.0.0\PsDfs.psm1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\PsDfs\1.0.0\PsDfs.psm1' is valid PowerShell" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-DfsNetInfo.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-DfsNetInfo.ps1' is valid PowerShell" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-FileShareInfo.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-FileShareInfo.ps1' is valid PowerShell" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-NetDfsEnum.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-NetDfsEnum.ps1' is valid PowerShell" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' is valid PowerShell" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\PsDfs.psd1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\PsDfs.psd1' is valid PowerShell" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\PsDfs.psm1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\PsDfs.psm1' is valid PowerShell" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.tests.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.tests.ps1' is valid PowerShell" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1' is valid PowerShell" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Manifest.tests.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Manifest.tests.ps1' is valid PowerShell" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Meta.tests.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Meta.tests.ps1' is valid PowerShell" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\MetaFixers.psm1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\MetaFixers.psm1' is valid PowerShell" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\PsDfs.tests.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\PsDfs.tests.ps1' is valid PowerShell" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\ScriptAnalyzerSettings.psd1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\ScriptAnalyzerSettings.psd1' is valid PowerShell" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\build.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\build.ps1' is valid PowerShell" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\psakeFile.ps1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\psakeFile.ps1' is valid PowerShell" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\psdependRequirements.psd1' is valid PowerShell" name="'PsDfs' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\psdependRequirements.psd1' is valid PowerShell" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="'PsDfs.psm1' Module Tests" executed="True" result="Success" success="True" time="0.3175" asserts="0" description="'PsDfs.psm1' Module Tests">
            <results>
              <test-suite type="ParameterizedTest" name="'PsDfs.psm1' Module Tests.Module file '&lt;ThisModule&gt;' can be imported without any errors" executed="True" result="Success" success="True" time="0.0308" asserts="0" description="Module file '&lt;ThisModule&gt;' can be imported without any errors">
                <results>
                  <test-case description="Module file 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\PsDfs\1.0.0\PsDfs.psm1' can be imported without any errors" name="'PsDfs.psm1' Module Tests.Module file 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\PsDfs\1.0.0\PsDfs.psm1' can be imported without any errors" time="0.0308" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.tests.ps1" executed="True" result="Success" success="True" time="0.1149" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' Function Tests" executed="True" result="Success" success="True" time="0.0535" asserts="0" description="'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' Function Tests">
            <results>
              <test-suite type="ParameterizedTest" name="'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' Function Tests.Script file 'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' can be run without any errors" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="Script file 'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' can be run without any errors">
                <results>
                  <test-case description="Script file 'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' can be run without any errors" name="'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' Function Tests.Script file 'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' can be run without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1&quot;)" time="0.0299" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' Function Tests.Script '&lt;Script&gt;' is valid PowerShell" executed="True" result="Success" success="True" time="0.0192" asserts="0" description="Script '&lt;Script&gt;' is valid PowerShell">
                <results>
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' is valid PowerShell" name="'Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Test-PublicFunction_782becbb-bae3-4572-83cd-32e6b21130e8.ps1' is valid PowerShell" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>