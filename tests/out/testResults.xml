<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="50" errors="0" failures="7" not-run="0" inconclusive="0" ignored="0" skipped="2" invalid="0" date="2022-06-24" time="14:17:45">
  <environment user="Owner" clr-version="Unknown" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" os-version="10.0.19044" user-domain="JLA-LoftHTPC" machine-name="JLA-LOFTHTPC" cwd="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests" nunit-version="2.5.8.0" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="3.2457" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Function.tests.ps1" executed="True" result="Success" success="True" time="1.1698" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Function.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="function 'Get-DfsNetInfo.ps1'" executed="True" result="Success" success="True" time="0.4072" asserts="0" description="function 'Get-DfsNetInfo.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-DfsNetInfo.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.2532" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-DfsNetInfo.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-DfsNetInfo.ps1&quot;)" time="0.2532" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-DfsNetInfo.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0586" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-DfsNetInfo.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-DfsNetInfo.ps1&quot;)" time="0.0586" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-FileShareInfo.ps1'" executed="True" result="Success" success="True" time="0.4419" asserts="0" description="function 'Get-FileShareInfo.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-FileShareInfo.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.007" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-FileShareInfo.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-FileShareInfo.ps1&quot;)" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-FileShareInfo.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0206" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-FileShareInfo.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-FileShareInfo.ps1&quot;)" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-NetDfsEnum.ps1'" executed="True" result="Success" success="True" time="0.4781" asserts="0" description="function 'Get-NetDfsEnum.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-NetDfsEnum.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0078" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-NetDfsEnum.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-NetDfsEnum.ps1&quot;)" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-NetDfsEnum.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0204" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-NetDfsEnum.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\src\functions\public\Get-NetDfsEnum.ps1&quot;)" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1" executed="True" result="Failure" success="False" time="0.9217" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="help for Get-DfsNetInfo" executed="True" result="Failure" success="False" time="0.4024" asserts="0" description="help for Get-DfsNetInfo">
            <results>
              <test-suite type="TestFixture" name="help for Get-DfsNetInfo.- Help for parameter 'Credentials'" executed="True" result="Failure" success="False" time="0.3224" asserts="0" description="help for Get-DfsNetInfo.- Help for parameter 'Credentials'">
                <results>
                  <test-case description="has a description" name="help for Get-DfsNetInfo.- Help for parameter 'Credentials'.has a description" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DfsNetInfo.- Help for parameter 'Credentials'.has the correct [mandatory] value" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DfsNetInfo.- Help for parameter 'Credentials'.has the correct parameter type" time="0.1188" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 12
Actual length:   41
Strings differ at index 0.
Expected: 'PSCredential'
But was:  'System.Management.Automation.PSCredential'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DfsNetInfo.- Help for parameter 'FolderPath'" executed="True" result="Failure" success="False" time="0.3504" asserts="0" description="help for Get-DfsNetInfo.- Help for parameter 'FolderPath'">
                <results>
                  <test-case description="has a description" name="help for Get-DfsNetInfo.- Help for parameter 'FolderPath'.has a description" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DfsNetInfo.- Help for parameter 'FolderPath'.has the correct [mandatory] value" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DfsNetInfo.- Help for parameter 'FolderPath'.has the correct parameter type" time="0.0132" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 1.
Expected: 'String[]'
But was:  'System.String[]'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-DfsNetInfo.is not auto-generated" time="0.022" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-DfsNetInfo.has a description" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-DfsNetInfo.has example code" time="0.0252" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-DfsNetInfo.has example help" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-FileShareInfo" executed="True" result="Failure" success="False" time="0.5126" asserts="0" description="help for Get-FileShareInfo">
            <results>
              <test-suite type="TestFixture" name="help for Get-FileShareInfo.- Help for parameter 'ServerAndShare'" executed="True" result="Failure" success="False" time="0.0969" asserts="0" description="help for Get-FileShareInfo.- Help for parameter 'ServerAndShare'">
                <results>
                  <test-case description="has a description" name="help for Get-FileShareInfo.- Help for parameter 'ServerAndShare'.has a description" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileShareInfo.- Help for parameter 'ServerAndShare'.has the correct [mandatory] value" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileShareInfo.- Help for parameter 'ServerAndShare'.has the correct parameter type" time="0.0168" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 10
Actual length:   39
Strings differ at index 0.
Expected: 'PSObject[]'
But was:  'System.Management.Automation.PSObject[]'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-FileShareInfo.is not auto-generated" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-FileShareInfo.has a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-FileShareInfo.has example code" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-FileShareInfo.has example help" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-NetDfsEnum" executed="True" result="Failure" success="False" time="0.6883" asserts="0" description="help for Get-NetDfsEnum">
            <results>
              <test-suite type="TestFixture" name="help for Get-NetDfsEnum.- Help for parameter 'Credentials'" executed="True" result="Failure" success="False" time="0.0617" asserts="0" description="help for Get-NetDfsEnum.- Help for parameter 'Credentials'">
                <results>
                  <test-case description="has a description" name="help for Get-NetDfsEnum.- Help for parameter 'Credentials'.has a description" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-NetDfsEnum.- Help for parameter 'Credentials'.has the correct [mandatory] value" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-NetDfsEnum.- Help for parameter 'Credentials'.has the correct parameter type" time="0.0101" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 12
Actual length:   41
Strings differ at index 0.
Expected: 'PSCredential'
But was:  'System.Management.Automation.PSCredential'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-NetDfsEnum.- Help for parameter 'FolderPath'" executed="True" result="Failure" success="False" time="0.156" asserts="0" description="help for Get-NetDfsEnum.- Help for parameter 'FolderPath'">
                <results>
                  <test-case description="has a description" name="help for Get-NetDfsEnum.- Help for parameter 'FolderPath'.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-NetDfsEnum.- Help for parameter 'FolderPath'.has the correct [mandatory] value" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-NetDfsEnum.- Help for parameter 'FolderPath'.has the correct parameter type" time="0.0687" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 1.
Expected: 'String[]'
But was:  'System.String[]'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-NetDfsEnum.is not auto-generated" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-NetDfsEnum.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-NetDfsEnum.has example code" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-NetDfsEnum.has example help" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Manifest.tests.ps1" executed="True" result="Failure" success="False" time="0.4247" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Manifest.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="module manifest 'PsDfs.psd1'" executed="True" result="Failure" success="False" time="0.1414" asserts="0" description="module manifest 'PsDfs.psd1'">
            <results>
              <test-suite type="TestFixture" name="module manifest 'PsDfs.psd1'.- Validation" executed="True" result="Failure" success="False" time="0.1344" asserts="0" description="module manifest 'PsDfs.psd1'.- Validation">
                <results>
                  <test-case description="is a valid manifest" name="module manifest 'PsDfs.psd1'.- Validation.is a valid manifest" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid name in the manifest" name="module manifest 'PsDfs.psd1'.- Validation.has a valid name in the manifest" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid root module" name="module manifest 'PsDfs.psd1'.- Validation.has a valid root module" time="0.0236" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 5
Actual length:   10
Strings differ at index 5.
Expected: 'PsDfs'
But was:  'PsDfs.psm1'
           -----^</message>
                      <stack-trace>at $manifestData.RootModule | Should -Be $moduleName, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Manifest.tests.ps1:36
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Manifest.tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has a valid version" name="module manifest 'PsDfs.psd1'.- Validation.has a valid version" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid description" name="module manifest 'PsDfs.psd1'.- Validation.has a valid description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid author" name="module manifest 'PsDfs.psd1'.- Validation.has a valid author" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid guid" name="module manifest 'PsDfs.psd1'.- Validation.has a valid guid" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid copyright" name="module manifest 'PsDfs.psd1'.- Validation.has a valid copyright" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Git tagging" executed="True" result="Ignored" success="True" time="0.1603" asserts="0" description="Git tagging">
            <results>
              <test-suite type="TestFixture" name="Git tagging.- Git tag version ''" executed="True" result="Ignored" success="True" time="0.0136" asserts="0" description="Git tagging.- Git tag version ''">
                <results>
                  <test-case description="is a valid version" name="Git tagging.- Git tag version ''.is a valid version" time="0.0081" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="matches the module manifest version" name="Git tagging.- Git tag version ''.matches the module manifest version" time="0.0021" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Metadata.tests.ps1" executed="True" result="Failure" success="False" time="0.29" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Metadata.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="text files" executed="True" result="Failure" success="False" time="0.0585" asserts="0" description="text files">
            <results>
              <test-suite type="TestFixture" name="text files.- File Encoding" executed="True" result="Success" success="True" time="0.0203" asserts="0" description="text files.- File Encoding">
                <results>
                  <test-case description="do not use Unicode/UTF-16 encoding" name="text files.- File Encoding.do not use Unicode/UTF-16 encoding" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="text files.- Indentations" executed="True" result="Failure" success="False" time="0.0521" asserts="0" description="text files.- Indentations">
                <results>
                  <test-case description="do not use tabs for indentations" name="text files.- Indentations.do not use tabs for indentations" time="0.0211" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 2.</message>
                      <stack-trace>at $totalTabsCount | Should -Be 0, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Metadata.tests.ps1:47
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Metadata.tests.ps1:47</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Module.tests.ps1" executed="True" result="Success" success="True" time="0.2256" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Module.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PowerShell files in module 'PsDfs'" executed="True" result="Success" success="True" time="0.0625" asserts="0" description="PowerShell files in module 'PsDfs'">
            <results>
              <test-suite type="ParameterizedTest" name="PowerShell files in module 'PsDfs'.'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0586" asserts="0" description="'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\1.0.1\PsDfs\PsDfs.psd1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'PsDfs'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\1.0.1\PsDfs\PsDfs.psd1' can be tokenized by the PowerShell parser without any errors" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\1.0.1\PsDfs\PsDfs.psm1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'PsDfs'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\1.0.1\PsDfs\PsDfs.psm1' can be tokenized by the PowerShell parser without any errors" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="module 'PsDfs'" executed="True" result="Success" success="True" time="0.1234" asserts="0" description="module 'PsDfs'">
            <results>
              <test-suite type="ParameterizedTest" name="module 'PsDfs'.can be imported without any errors" executed="True" result="Success" success="True" time="0.0534" asserts="0" description="can be imported without any errors">
                <results>
                  <test-case description="can be imported without any errors" name="module 'PsDfs'.can be imported without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\dist\1.0.1\PsDfs\PsDfs.psm1&quot;)" time="0.0534" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Project.tests.ps1" executed="True" result="Success" success="True" time="0.2139" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsDfs\tests\Project.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="change log" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="change log">
            <results>
              <test-suite type="TestFixture" name="change log.- Version" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="change log.- Version">
                <results>
                  <test-case description="has a valid version" name="change log.- Version.has a valid version" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the same version as the manifest" name="change log.- Version.has the same version as the manifest" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>